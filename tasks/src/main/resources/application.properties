spring.datasource.url= jdbc:postgresql://localhost:5432/tasks
spring.datasource.username= postgres
spring.datasource.password= example
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

keycloak.auth-server-url= http://localhost:8484/auth
keycloak.realm= ates
keycloak.resource= tasks
keycloak.public-client= true

server.port= ${SERVER_PORT:8080}
spring.application.name= ${APPLICATION_NAME:spring-security-keycloak}

# messaging
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
spring.kafka.properties.schema.registry.url=http://localhost:8081